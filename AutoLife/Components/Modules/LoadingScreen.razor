<!DOCTYPE html>
<html lang="sv">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>myPlanner Loading</title>
    <style>  
       * {  
           margin: 0;  
           padding: 0;  
           box-sizing: border-box;  
       }  

       body {  
           font-family: 'Montserrat', 'Arial', sans-serif;  
           background: linear-gradient(-45deg, #667eea, #764ba2, #f093fb, #f5576c);  
           background-size: 400% 400%;  
           animation: gradientShift 15s ease infinite;  
           height: 100vh;  
           display: flex;  
           justify-content: center;  
           align-items: center;  
           overflow: hidden;  
       }  

       @@keyframes gradientShift {  
           0% {  
               background-position: 0% 50%;  
           }  
           50% {  
               background-position: 100% 50%;  
           }  
           100% {  
               background-position: 0% 50%;  
           }  
       }  

       .loading-container {  
           text-align: center;  
           position: relative;  
           z-index: 2;  
           overflow: hidden;  
           padding: 10px;  
       }  

       .logo-animation {  
           position: relative;  
           margin-bottom: 2rem;  
       }  

       .logo-text {  
           font-size: 4rem;  
           font-weight: 900;  
           color: white;  
           text-shadow: 0 0 30px rgba(255, 255, 255, 0.5);  
           letter-spacing: 3px;  
           animation: glow 2s ease-in-out infinite alternate;  
           position: relative;  
           z-index: 3;  
       }  

       @@keyframes glow {  
           from {  
               text-shadow: 0 0 30px rgba(255, 255, 255, 0.5), 0 0 60px rgba(255, 255, 255, 0.3), 0 0 90px rgba(255, 255, 255, 0.2);  
               transform: scale(1);  
           }  
           to {  
               text-shadow: 0 0 40px rgba(255, 255, 255, 0.8), 0 0 80px rgba(255, 255, 255, 0.5), 0 0 120px rgba(255, 255, 255, 0.3);  
               transform: scale(1.05);  
           }  
       }  

       .floating-circles {  
           position: absolute;  
           top: 0;  
           left: 0;  
           width: 100%;  
           height: 100%;  
           pointer-events: none;  
           z-index: 1;  
       }  

       .circle {  
           position: absolute;  
           border-radius: 50%;  
           background: rgba(255, 255, 255, 0.1);  
           backdrop-filter: blur(10px);  
           animation: float 6s ease-in-out infinite;  
       }  

       .circle:nth-child(1) {  
           width: 80px;  
           height: 80px;  
           top: 20%;  
           left: 10%;  
           animation-delay: 0s;  
       }  

       .circle:nth-child(2) {  
           width: 120px;  
           height: 120px;  
           top: 60%;  
           right: 10%;  
           animation-delay: 2s;  
       }  

       .circle:nth-child(3) {  
           width: 60px;  
           height: 60px;  
           bottom: 20%;  
           left: 20%;  
           animation-delay: 4s;  
       }  

       .circle:nth-child(4) {  
           width: 100px;  
           height: 100px;  
           top: 15%;  
           right: 25%;  
           animation-delay: 1s;  
       }  

       .circle:nth-child(5) {  
           width: 70px;  
           height: 70px;  
           bottom: 15%;  
           right: 30%;  
           animation-delay: 3s;  
       }  

       @@keyframes float {  
           0%, 100% {  
               transform: translateY(0px) rotate(0deg);  
               opacity: 0.7;  
           }  
           50% {  
               transform: translateY(-20px) rotate(180deg);  
               opacity: 1;  
           }  
       }  

       .progress-container {  
           width: 300px;  
           height: 6px;  
           background: rgba(255, 255, 255, 0.2);  
           border-radius: 10px;  
           overflow: hidden;  
           margin: 0 auto;  
           backdrop-filter: blur(10px);  
       }  

       .progress-bar {  
           height: 100%;  
           background: linear-gradient(90deg, #ffffff, #f0f0f0, #ffffff);  
           background-size: 200% 100%;  
           border-radius: 10px;  
           animation: loading 2s ease-in-out infinite, progressFill 2s ease-out forwards;  
       }  

       @@keyframes loading {  
           0% {  
               background-position: -200% 0;  
           }  
           100% {  
               background-position: 200% 0;  
           }  
       }  

       @@keyframes progressFill {  
           0% {  
               width: 0%;  
           }  
           100% {  
               width: 100%;  
           }  
       }  

       .loading-text {  
           color: white;  
           margin-top: 1rem;  
           font-size: 1.2rem;  
           font-weight: 300;  
           letter-spacing: 2px;  
           animation: pulse 1.5s ease-in-out infinite;  
       }  

       @@keyframes pulse {  
           0%, 100% {  
               opacity: 0.6;  
           }  
           50% {  
               opacity: 1;  
           }  
       }  

       .particles {  
           position: absolute;  
           top: 0;  
           left: 0;  
           width: 100%;  
           height: 100%;  
           pointer-events: none;  
       }  

       .particle {  
           position: absolute;  
           width: 4px;  
           height: 4px;  
           background: white;  
           border-radius: 50%;  
           animation: particle-float 8s linear infinite;  
       }  

       @@keyframes particle-float {  
           0% {  
               transform: translateY(100vh) translateX(0);  
               opacity: 0;  
           }  
           10% {  
               opacity: 1;  
           }  
           90% {  
               opacity: 1;  
           }  
           100% {  
               transform: translateY(-10vh) translateX(100px);  
               opacity: 0;  
           }  
       }  

       /* Responsive design */  
       @@media (max-width: 768px) {  
           .logo-text {  
               font-size: 2.5rem;  
               letter-spacing: 2px;  
           }  

           .progress-container {  
               width: 250px;  
           }  

           .loading-text {  
               font-size: 1rem;  
           }  
       }  
    </style>
</head>
<body>
    <div class="floating-circles">
        <div class="circle"></div>
        <div class="circle"></div>
        <div class="circle"></div>
        <div class="circle"></div>
        <div class="circle"></div>
    </div>

    <div class="particles" id="particles"></div>

    <div class="loading-container">
        <div class="logo-animation">
            <h1 class="logo-text">myPlanner</h1>
        </div>

        <div class="progress-container">
            <div class="progress-bar"></div>
        </div>

        <p class="loading-text">Loading planner...</p>
    </div>

    <script>
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            const particleCount = 50;

            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';

                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 8 + 's';
                particle.style.animationDuration = (Math.random() * 4 + 6) + 's';

                particlesContainer.appendChild(particle);
            }
        }

        function simulateLoading() {
            const loadingTexts = [
                'Loading planner...',
                'Preparing lists...',
                'Syncronizing data...',
                'Almost finished...'
            ];

            const textElement = document.querySelector('.loading-text');
            let currentIndex = 0;

            const interval = setInterval(() => {
                currentIndex = (currentIndex + 1) % loadingTexts.length;
                textElement.textContent = loadingTexts[currentIndex];
            }, 1000);

            // Stoppa efter 4 sekunder (när laddningen är klar)
            setTimeout(() => {
                clearInterval(interval);
                textElement.textContent = 'Welcome to myPlanner!';
            }, 4000);
        }

        // Initiera
        document.addEventListener('DOMContentLoaded', () => {
            createParticles();
            simulateLoading();
        });
    </script>
</body>
</html>